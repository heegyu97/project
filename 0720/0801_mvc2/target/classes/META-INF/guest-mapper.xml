<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="GuestMapper">
<!-- 
	// ord 주문 번호 * ( + 상품명 ) / 주문 일자* /주문상품수량* / 결재금액* /  + 상세보기버튼 ( 결제번호 ->결제상세정보  ) list 가져오기
	// ordpro 결제일자 /결제번호 / (주문상세번호*검색용) / 주문번호* / 상품번호 / 상품수량* / 판매단가* / 주문금액* / 할인율* /  결제금액* / 판매자* / 주문상태*
	//총결제액 + 카드번호 / 총할인금액 / 총 구매금액(할인금액*) / 총상품수
 -->
 		
 		<!-- 결제내역 detail창 내역들 -->
 		<select id="paydetail" parameterType="kr.co.ictedu.util.dto.HistoryDTO" resultType="kr.co.ictedu.util.dto.HistoryDTO">
 			SELECT o.ord_no, o.m_no, m.m_id, o.ord_addr_no
			, o.ord_stock, o.ord_sum, o.ord_dc_pay, o.ord_pay 
			, o.ord_date, o.ord_status 
			
			, op.ordpro_no, op.pro_no
			, op.ordpro_stock, op.ordpro_price, op.ordpro_sum
			, op.ordpro_dc, op.ordpro_dc_pay, op.ordpro_pay
			
			, p.pro_name, p.m_no as seller_mno, m2.m_id as seller_mid
			, p.pro_thum_pic, p.pro_thum_path 
			, coco.code_name 
			
			
			, d.addr_name, d.tel, d.post_code, d.addr1, d.addr2
			FROM ord o, ordpro op, product p, delivery_addr d, member m, member m2, order_code coco 
			where o.ord_no = #{ord_no} 
			and o.m_no = #{m_no} 
			and o.m_no = m.m_no 
			and o.ord_no = op.ord_no 
			and op.pro_no = p.pro_no 
			and p.m_no = m2.m_no  
			and o.ord_addr_no = d.addr_no 
			and o.ord_status = coco.code_no 
			order by op.ord_no desc 
 		
 		
 		</select>
 		
 		
 		
 		<!-- 리스트 카운트  -->
 		<select id="searchordCount"  parameterType="kr.co.ictedu.util.dto.SearchDTO" resultType="int">
			select count(o.ord_no) cnt  
			from ordpro op, ord o 
			where 
			op.ord_no = o.ord_no 
			and o.m_no = #{m_no} 
		</select>
 
 		<!-- 구매내역 리스트 불러오기 -->
		<select id="ordList" parameterType="kr.co.ictedu.util.dto.SearchDTO" resultType ="kr.co.ictedu.util.dto.HistoryDTO">
			select op.ordpro_no, op.ord_no, op.ordpro_stock, op.ordpro_pay  
				,p.pro_name, p.m_no, p.pro_thum_pic, p.pro_thum_path  
				,o.ord_status, o.ord_date , sm.m_id, coco.code_name  
			from  
				ordpro op, ord o, product p , member sm, order_code coco  
			where o.m_no = #{m_no}   
			and op.pro_no = p.pro_no 
			and p.m_no = sm.m_no  
			and op.ord_no = o.ord_no  
			
			and o.ord_status = coco.code_no 
   			 
			order by o.ord_date desc 
			limit #{limitNum}, 10
		</select>


		<update id="incrementViewCnt" parameterType="java.lang.String">
			update product
			set pro_view_cnt = pro_view_cnt + 1
			where pro_no = #{pro_no}
		</update>
		
		<select id="detail" parameterType="java.lang.String" resultType="kr.co.ictedu.util.dto.ProductDTO">
			select pro_no, pro_big, pro_mid, pro_age, pro_name, pro_date, pro_stock, pro_price, 
				pro_dc, pro_dc_strt, pro_dc_end, pro_ship, pro_ship_free, pro_thum_pic, 
				pro_thum_path, pro_prdt_pic, pro_prdt_path, pro_ctnts, pro_view_cnt
			from product
			where pro_no = #{pro_no}
		</select>
		
		<select id="selectList"  parameterType="kr.co.ictedu.util.dto.SearchDTO"
									resultType="kr.co.ictedu.util.dto.ProductDTO">
			select pro_no, pro_big, pro_mid, pro_age, pro_name, pro_date, pro_stock, pro_price, 
				pro_dc, pro_dc_strt, pro_dc_end, pro_ship, pro_ship_free, pro_thum_pic, 
				pro_thum_path, pro_prdt_pic, pro_prdt_path, pro_ctnts, pro_view_cnt
			from product
			<!-- K대분류 조건 -->
			<if test="searchOption != null and searchOption != ''">
				where pro_big = #{searchOption}
			</if>
			<!-- K중분류조건 -->
			<if test="searchOption2 != null and searchOption2 != ''">
				and pro_mid = #{searchOption2}
			</if>
			
			<!-- S상품명조건 -->
			<if test="searchWord != null and searchWord !=''">
				where pro_name like concat('%', #{searchWord}, '%')
			</if>
			
			<!-- 
			최신
			판매량  => 현재불가 
			리뷰 => 조회수로 변경
			높은 가격
			낮은 가격
			높은 할인율
			 -->
			order by 
			<!-- 정렬조건 -->
			<if test="searchOption3 != null and searchOption3 != ''">
				<choose>
					<when test = "searchOption3 == 'recency'">
						pro_date desc, 
					</when>
					<when test = "searchOption3 == 'look'">
						pro_view_cnt desc,	
					</when>
					<when test = "searchOption3 == 'hprice'">
						pro_price -  pro_price * pro_dc / 100  desc , 
					</when>
					<when test = "searchOption3 == 'lprice'">
						pro_price -  pro_price * pro_dc / 100 ,
					</when>
					<when test =  "searchOption3 == 'hdis'">
						pro_dc desc,
					</when>
					<when test = "searchOption3 == 'ldis'">
						pro_dc  , 
					</when>
				</choose>
			</if>
			pro_no desc
			limit #{limitNum}, 10
		</select>
		
		<select id="searchListCount" parameterType="kr.co.ictedu.util.dto.SearchDTO" resultType="int">
			select count(pro_no) cnt from product
			<!-- 대분류 조건 -->
			<if test="searchOption != null and searchOption != ''">
				where pro_big = #{searchOption}
			</if>
			<!-- 중분류조건 -->
			<if test="searchOption2 != null and searchOption2 != ''">
				and pro_mid = #{searchOption2}
			</if>
			<!-- 상품명조건 -->
			<if test="searchWord != null and searchWord !=''">
				where pro_name like concat('%', #{searchWord}, '%')
			</if>
		</select>

		
		
		
		<delete id="deleteid" parameterType="kr.co.ictedu.util.dto.MemberDTO">
			delete from member where m_no = #{m_no} and m_pwd = #{m_pwd}
		</delete>

		<update id="updateid" parameterType="kr.co.ictedu.util.dto.MemberDTO">
			update member set 
			m_pwd = #{m_pwd}, m_tel = #{m_tel}, m_email = #{m_email}, 
			m_sms_agree = #{m_sms_agree},m_email_agree = #{m_email_agree}, m_post = #{m_post}, 
			m_addr1 = #{m_addr1}, m_addr2 = #{m_addr2},	m_cat_age = #{m_cat_age}, 
			m_cat_sex = #{m_cat_sex}, m_neut_yn = #{m_neut_yn}
			where m_no = #{m_no}
		</update>


	<select id="bigSelect"  resultType="kr.co.ictedu.util.dto.CommenCodeDTO">
		select distinct( code_class )
		from commen_code 
	</select>
	
	<select id="midSelect" parameterType="java.lang.String" resultType="kr.co.ictedu.util.dto.CommenCodeDTO">
		SELECT code_name ,code_class, code_no 
		FROM commen_code 
		where code_class = #{select_pro_big}
		
	</select>

</mapper>
